"""update first models

Revision ID: cef400685c0a
Revises: 
Create Date: 2025-10-19 20:10:48.937071

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cef400685c0a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_extensionist',
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('identification', sa.String(length=50), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('zone', sa.String(length=100), nullable=True),
    sa.Column('signing_image_path', sa.String(length=255), nullable=True),
    sa.Column('api_token', sa.String(length=255), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_extensionist_api_token'), 'user_extensionist', ['api_token'], unique=True)
    op.create_table('user_producter',
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('type_id', sa.String(length=50), nullable=True),
    sa.Column('identification', sa.String(length=50), nullable=True),
    sa.Column('is_woman_rural', sa.Boolean(), nullable=True),
    sa.Column('is_young_rural', sa.Boolean(), nullable=True),
    sa.Column('ethnic_belonging', sa.String(length=150), nullable=True),
    sa.Column('is_victim_conflict', sa.Boolean(), nullable=True),
    sa.Column('is_narp', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_property',
    sa.Column('user_producter_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('latitude', sa.String(length=50), nullable=True),
    sa.Column('longitude', sa.String(length=50), nullable=True),
    sa.Column('asnm', sa.String(length=50), nullable=True),
    sa.Column('total_area', sa.String(length=50), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('village', sa.String(length=100), nullable=True),
    sa.Column('area_total_property', sa.String(length=50), nullable=True),
    sa.Column('linea_productive_primary', sa.String(length=255), nullable=True),
    sa.Column('area_total_linea_productive_primary', sa.String(length=50), nullable=True),
    sa.Column('linea_productive_secondary', sa.String(length=255), nullable=True),
    sa.Column('area_total_linea_productive_secondary', sa.String(length=50), nullable=True),
    sa.Column('area_in_production', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_producter_id'], ['user_producter.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('survey_1',
    sa.Column('extensionist_id', sa.Integer(), nullable=True),
    sa.Column('user_producter_id', sa.Integer(), nullable=True),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('classification_user', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('medition_focalization', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('objetive_accompaniment', sa.String(length=500), nullable=True),
    sa.Column('initial_diagnosis', sa.String(length=500), nullable=True),
    sa.Column('recommendations_commitments', sa.String(length=500), nullable=True),
    sa.Column('observations', sa.String(length=500), nullable=True),
    sa.Column('visit_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('attended_by', sa.String(length=100), nullable=True),
    sa.Column('user', sa.String(length=100), nullable=True),
    sa.Column('worker_up', sa.String(length=50), nullable=True),
    sa.Column('Household_size', sa.String(length=10), nullable=True),
    sa.Column('other', sa.String(length=150), nullable=True),
    sa.Column('photo_user', sa.String(length=255), nullable=True),
    sa.Column('photo_interaction', sa.String(length=255), nullable=True),
    sa.Column('photo_panorama', sa.String(length=255), nullable=True),
    sa.Column('phono_extra_1', sa.String(length=255), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['extensionist_id'], ['user_extensionist.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['product_property.id'], ),
    sa.ForeignKeyConstraint(['user_producter_id'], ['user_producter.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('survey_2',
    sa.Column('extensionist_id', sa.Integer(), nullable=True),
    sa.Column('producter_id', sa.Integer(), nullable=True),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('objective_accompaniment', sa.String(length=500), nullable=True),
    sa.Column('visit_development_follow_up_activities', sa.String(length=500), nullable=True),
    sa.Column('previous_visit_recommendations_fulfilled', sa.Boolean(), nullable=True),
    sa.Column('recommendations_commitments', sa.String(length=500), nullable=True),
    sa.Column('observations', sa.String(length=700), nullable=True),
    sa.Column('objective', sa.String(length=500), nullable=True),
    sa.Column('visit_followup', sa.String(length=500), nullable=True),
    sa.Column('fulfilled_previous_recommendations', sa.Boolean(), nullable=True),
    sa.Column('new_recommendations', sa.String(length=500), nullable=True),
    sa.Column('observations_seg', sa.String(length=500), nullable=True),
    sa.Column('register_coinnovation', sa.String(length=500), nullable=True),
    sa.Column('local_practice_tool_technology_coinnovation_identified', sa.Boolean(), nullable=True),
    sa.Column('local_coinovation_or_technology_record', sa.Boolean(), nullable=True),
    sa.Column('name_innovation', sa.String(length=150), nullable=True),
    sa.Column('description_innovation', sa.String(length=500), nullable=True),
    sa.Column('problem_solution_innovation', sa.String(length=500), nullable=True),
    sa.Column('origin_and_developers', sa.String(length=500), nullable=True),
    sa.Column('materials_and_resources', sa.String(length=500), nullable=True),
    sa.Column('process_functioning', sa.String(length=500), nullable=True),
    sa.Column('potential_replication', sa.String(length=500), nullable=True),
    sa.Column('observations_extensionist', sa.String(length=500), nullable=True),
    sa.Column('photo_user', sa.String(length=255), nullable=True),
    sa.Column('photo_interaction', sa.String(length=255), nullable=True),
    sa.Column('photo_panorama', sa.String(length=255), nullable=True),
    sa.Column('phono_extra_1', sa.String(length=255), nullable=True),
    sa.Column('date_hour_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('socilization_next_event', sa.String(length=500), nullable=True),
    sa.Column('copy_documentation_delivered', sa.Boolean(), nullable=True),
    sa.Column('visit_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('attended_by', sa.String(length=100), nullable=True),
    sa.Column('user', sa.String(length=100), nullable=True),
    sa.Column('worker_up', sa.String(length=50), nullable=True),
    sa.Column('Household_size', sa.String(length=10), nullable=True),
    sa.Column('other', sa.String(length=150), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['extensionist_id'], ['user_extensionist.id'], ),
    sa.ForeignKeyConstraint(['producter_id'], ['user_producter.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['product_property.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('survey_3',
    sa.Column('extensionist_id', sa.Integer(), nullable=True),
    sa.Column('user_producter_id', sa.Integer(), nullable=True),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('classification_user', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('medition_focalization', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('objetive_accompaniment', sa.String(length=500), nullable=True),
    sa.Column('initial_diagnosis', sa.String(length=500), nullable=True),
    sa.Column('recommendations_commitments', sa.String(length=500), nullable=True),
    sa.Column('observations', sa.String(length=500), nullable=True),
    sa.Column('visit_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('attended_by', sa.String(length=100), nullable=True),
    sa.Column('user', sa.String(length=100), nullable=True),
    sa.Column('worker_up', sa.String(length=50), nullable=True),
    sa.Column('Household_size', sa.String(length=10), nullable=True),
    sa.Column('other', sa.String(length=150), nullable=True),
    sa.Column('photo_user', sa.String(length=255), nullable=True),
    sa.Column('photo_interaction', sa.String(length=255), nullable=True),
    sa.Column('photo_panorama', sa.String(length=255), nullable=True),
    sa.Column('phono_extra_1', sa.String(length=255), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['extensionist_id'], ['user_extensionist.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['product_property.id'], ),
    sa.ForeignKeyConstraint(['user_producter_id'], ['user_producter.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('classification_user',
    sa.Column('survey_idd1', sa.Integer(), nullable=True),
    sa.Column('survey_idd3', sa.Integer(), nullable=True),
    sa.Column('main_productive_activity', sa.Integer(), nullable=True),
    sa.Column('secondary_productive_activities', sa.Integer(), nullable=True),
    sa.Column('tools_and_equipment', sa.Integer(), nullable=True),
    sa.Column('good_agricultural_practices', sa.Integer(), nullable=True),
    sa.Column('commercialization_structure', sa.Integer(), nullable=True),
    sa.Column('markets', sa.Integer(), nullable=True),
    sa.Column('added_value', sa.Integer(), nullable=True),
    sa.Column('records', sa.Integer(), nullable=True),
    sa.Column('labor_type', sa.Integer(), nullable=True),
    sa.Column('credit_and_banking', sa.Integer(), nullable=True),
    sa.Column('organization_membership', sa.Integer(), nullable=True),
    sa.Column('collective_activities', sa.Integer(), nullable=True),
    sa.Column('entrepreneurship_associativity', sa.Integer(), nullable=True),
    sa.Column('commercial_alliances', sa.Integer(), nullable=True),
    sa.Column('technical_support', sa.Integer(), nullable=True),
    sa.Column('quality_certifications', sa.Integer(), nullable=True),
    sa.Column('intellectual_property', sa.Integer(), nullable=True),
    sa.Column('access_information_sources', sa.Integer(), nullable=True),
    sa.Column('access_to_ict', sa.Integer(), nullable=True),
    sa.Column('use_of_ict_decision', sa.Integer(), nullable=True),
    sa.Column('ict_skills', sa.Integer(), nullable=True),
    sa.Column('knowledge_appropriation', sa.Integer(), nullable=True),
    sa.Column('environmental_practices', sa.Integer(), nullable=True),
    sa.Column('sustainable_practices', sa.Integer(), nullable=True),
    sa.Column('climate_change_adaptation', sa.Integer(), nullable=True),
    sa.Column('environmental_regulations', sa.Integer(), nullable=True),
    sa.Column('participation_mechanisms', sa.Integer(), nullable=True),
    sa.Column('participation_tools', sa.Integer(), nullable=True),
    sa.Column('political_social_control', sa.Integer(), nullable=True),
    sa.Column('community_self_management', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['survey_idd1'], ['survey_1.id'], ),
    sa.ForeignKeyConstraint(['survey_idd3'], ['survey_3.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('classification_user')
    op.drop_table('survey_3')
    op.drop_table('survey_2')
    op.drop_table('survey_1')
    op.drop_table('product_property')
    op.drop_table('user_producter')
    op.drop_index(op.f('ix_user_extensionist_api_token'), table_name='user_extensionist')
    op.drop_table('user_extensionist')
    # ### end Alembic commands ###
